# bot.py
import asyncio
import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import CommandStart, Command
from aiogram.enums.parse_mode import ParseMode
from dotenv import load_dotenv
from agent.agent import LaptopAgent
import re
import openai

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")
openai.api_key = os.getenv("OPENAI_API_KEY")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
agent = LaptopAgent(model='gpt-4o-2024-08-06')


def escape_md(text: str) -> str:
    """
    –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã –¥–ª—è MarkdownV2, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    –°–ø–∏—Å–æ–∫ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å: _ * [ ] ( ) ~ ` > # + - = | { } . !
    """
    escape_chars = r'_*\[\]()~`>#+\-=|{}.!'
    return re.sub(f'([{re.escape(escape_chars)}])', r'\\\1', text)


@dp.message(Command("help"))
async def handle_help(message: Message):
    help_text = (
        "–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç –ø–æ–¥–æ–±—Ä–∞—Ç—å –Ω–æ—É—Ç–±—É–∫, —Å—Ä–∞–≤–Ω–∏—Ç—å –º–æ–¥–µ–ª–∏ –∏ –¥–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–æ–≤–∞—Ä–∞–º.\n\n"
        "–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n"
        "‚Ä¢ *–ü–æ–¥–±–æ—Ä –Ω–æ—É—Ç–±—É–∫–æ–≤*: –ü—Ä–æ—Å—Ç–æ –æ–ø–∏—à–∏—Ç–µ, –∫–∞–∫–æ–π –Ω–æ—É—Ç–±—É–∫ –≤–∞–º –Ω—É–∂–µ–Ω (–Ω–∞–ø—Ä–∏–º–µ—Ä, \"–ù–æ—É—Ç–±—É–∫ –¥–ª—è —à–∫–æ–ª—ã\")\n"
        "‚Ä¢ *–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤*: –ú–æ–≥—É —Å—Ä–∞–≤–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–æ–¥–µ–ª–µ–π –ø–æ –∫–ª—é—á–µ–≤—ã–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º\n"
        "‚Ä¢ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö*: –†–∞—Å—Å–∫–∞–∂—É –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö, –æ—Ç–∑—ã–≤–∞—Ö –∏ —Ü–µ–Ω–∞—Ö\n"
        "‚Ä¢ *–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏*: –ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—Ç–µ, —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å, –ø–æ–¥—Å–∫–∞–∂—É, –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ\n\n"
        "–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:\n"
        "‚Ä¢ _\"–ú–Ω–µ –Ω—É–∂–µ–Ω –Ω–æ—É—Ç–±—É–∫ –¥–ª—è —à–∫–æ–ª—ã\"_\n"
        "‚Ä¢ _\"–°—Ä–∞–≤–Ω–∏ Apple MacBook Air –∏ Dell XPS\"_\n"
        "‚Ä¢ _\"–†–∞—Å—Å–∫–∞–∂–∏, —á–µ–º –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –Ω–æ—É—Ç–±—É–∫ —Å –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º i5 –æ—Ç i7\"_"
    )
    await message.answer(help_text, parse_mode=ParseMode.MARKDOWN)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def handle_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –Ω–æ—É—Ç–±—É–∫. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@dp.message()
async def handle_text(message: Message):
    user_id = message.chat.id
    user_text = message.text

    try:
        response = await asyncio.to_thread(agent.process_message, user_text, user_id)
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–º")
        response = "–ò–∑–≤–∏–Ω–∏, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî"

    print(response)
    # escaped_response = escape_md(response)
    await message.answer(response)

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(dp.start_polling(bot))
